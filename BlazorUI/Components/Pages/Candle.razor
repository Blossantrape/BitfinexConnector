@page "/candle"
@namespace BlazorUI.Pages
@using BitfinexConnector.Core.Models
@using BitfinexConnector.Core.Abstractions
@inject ITestConnector TestConnector

<h3>Информация о свечах</h3>

<div>
    <label for="timeframe">Таймфрейм:</label>
    <select id="timeframe" @bind="selectedTimeFrame">
        <option value="1m">1 минута</option>
        <option value="5m">5 минут</option>
        <option value="15m">15 минут</option>
        <option value="1h">1 час</option>
    </select>
</div>

<button @onclick="LoadCandles" class="btn btn-primary">Загрузить BTCUSD</button>

@if (isLoading)
{
    <p>Загрузка...</p>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red;">Ошибка: @errorMessage</p>
}
else if (candelData is not null && candelData.Any())
{
    <p>Получено свечей: @candelData.Count</p>
    @foreach (var candle in candelData)
    {
        <div>
            <p><b>Время свечи:</b> @candle.Timestamp</p>
            <p><b>Цена открытия:</b> @candle.Open</p>
            <p><b>Цена закрытия:</b> @candle.Close</p>
            <p><b>Макс. цена:</b> @candle.High</p>
            <p><b>Мин. цена:</b> @candle.Low</p>
            <p><b>Объём торгов:</b> @candle.Volume</p>
            <hr />
        </div>
    }
}

@code {
    private List<BitfinexConnector.Core.Models.Candle> candelData;
    private bool isLoading;
    private string errorMessage;
    private string selectedTimeFrame = "1m";

    /*protected override void OnInitialized()
    {
        Console.WriteLine("Компонент Candle инициализирован");
    }*/

    private async Task LoadCandles()
    {
        try
        {
            Console.WriteLine("Нажата кнопка, начинается загрузка...");
            isLoading = true;
            errorMessage = null;

            candelData = await TestConnector.GetCandlesAsync("BTCUSD", selectedTimeFrame);

            if (candelData is null || !candelData.Any())
            {
                errorMessage = "Данные не получены.";
                Console.WriteLine("Получены пустые данные");
            }
            else
            {
                Console.WriteLine($"Получено {candelData.Count} свечей.");
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Ошибка: {ex.Message}";
            Console.WriteLine(errorMessage);
        }
        finally
        {
            isLoading = false;
        }
    }
}